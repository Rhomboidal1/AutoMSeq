%runfile //w2k16/abisync/Data/Testing/AutoMSeq/mseq_automation/ui_browse_folder.py --wdir

%runfile //w2k16/abisync/Data/Testing/AutoMSeq/mseq_automation/ui_fullworkflow.py --wdir
Testing mSeq workflow with folder: P:\Data\2025-03-14\BioI-12345
'\\w2k16\abisync\data\testing\automseq\mseq_automation'
CMD.EXE was started with the above path as the current directory.
UNC paths are not supported.  Defaulting to Windows directory.
Started new mSeq application
C:\Users\tyler\AppData\Local\miniconda3\Lib\site-packages\pywinauto\application.py:1085: UserWarning: 32-bit application should be automated using 32-bit Python (you use 64-bit Python)
  warnings.warn(
Step 1: Pressing Ctrl+N to open New Project dialog...
Step 2: Waiting for Browse For Folder dialog...
Browse For Folder dialog found
Step 3: Navigating to folder: P:\Data\2025-03-14\BioI-12345
Virtual folder name: This PC
Starting navigation from: \Desktop\This PC
Looking for folder: P:
 - Available child: 3D Objects
 - Available child: Desktop
 - Available child: Documents
 - Available child: Downloads
 - Available child: Music
 - Available child: Pictures
 - Available child: Videos
 - Available child: Windows (C:)
 - Available child: Data (G:)
 - Available child: Tyler (\\w2k16\users) (H:)
 - Available child: ABI-Instrument (L:)
 - Available child: data (\\Scorpio) (N:)
 - Available child: ABISync (P:)
   Found match: ABISync (P:)
Looking for folder: Data
 - Available child: Data
   Found match: Data
Looking for folder: 2025-03-14
 - Available child: 03.14.25
 - Available child: Individuals
 - Available child: Nanopore-Full Plasmid
 - Available child: Plates
 - Available child: Primer walking projects
 - Available child: Proficiency Testing and NanoPrep Validation
 - Available child: Reinjects
 - Available child: Testing
Looking for folder: BioI-12345
 - Available child: 03.14.25
 - Available child: Individuals
 - Available child: Nanopore-Full Plasmid
 - Available child: Plates
 - Available child: Primer walking projects
 - Available child: Proficiency Testing and NanoPrep Validation
 - Available child: Reinjects
 - Available child: Testing
Step 4: Clicking OK button...
Step 5: Waiting for Mseq Preferences dialog...
Mseq Preferences dialog found
Step 6: Waiting for Copy sequence files dialog...
Copy sequence files dialog found
Selecting all files with Ctrl+A...
Step 7: Waiting for File error dialog...
File error dialog found
Step 8: Waiting for Call bases dialog...
Call bases dialog found
Step 9: Waiting for processing to complete...
Error in test_mseq_workflow: [WinError 3] The system cannot find the path specified: 'P:\\Data\\2025-03-14\\BioI-12345'

%runfile //w2k16/abisync/Data/Testing/AutoMSeq/mseq_automation/ui_dialog_explorer.py --wdir
Dialog Explorer started. Press Ctrl+C to stop.
Open dialogs in mSeq to capture their details...
New windows detected: {'Jsoftware', 'mSeq'}
Error capturing window 'Jsoftware': {'title': 'Jsoftware', 'top_level_only': True, 'backend': 'win32'}
Saved details to dialog_logs\mSeq_153655.txt
New windows detected: {'Open project'}
Error capturing window 'Open project': {'title': 'Open project', 'top_level_only': True, 'backend': 'win32'}
New windows detected: {'Create new project'}
Error capturing window 'Create new project': {'title': 'Create new project', 'top_level_only': True, 'backend': 'win32'}
---------------------------------------------------------------------------
InvalidWindowHandle                       Traceback (most recent call last)
File ~\AppData\Local\miniconda3\Lib\site-packages\spyder_kernels\customize\utils.py:209, in exec_encapsulate_locals(code_ast, globals, locals, exec_fun, filename)
    207     if filename is None:
    208         filename = "<stdin>"
--> 209     exec_fun(compile(code_ast, filename, "exec"), globals, None)
    210 finally:
    211     if use_locals_hack:
    212         # Cleanup code

File \\w2k16\abisync\data\testing\automseq\mseq_automation\ui_dialog_explorer.py:70
     67         print("\nDialog Explorer stopped.")
     69 if __name__ == "__main__":
---> 70     dialog_explorer()

File \\w2k16\abisync\data\testing\automseq\mseq_automation\ui_dialog_explorer.py:20, in dialog_explorer()
     17 try:
     18     while True:
     19         # Get current windows
---> 20         current_windows = set(window.window_text() for window in Desktop(backend="win32").windows())
     22         # Find new windows
     23         new_windows = current_windows - initial_windows

File ~\AppData\Local\miniconda3\Lib\site-packages\pywinauto\__init__.py:139, in Desktop.windows(self, **kwargs)
    136 kwargs['backend'] = self.backend.name
    138 windows = findwindows.find_elements(**kwargs)
--> 139 return [self.backend.generic_wrapper_class(win) for win in windows]

File ~\AppData\Local\miniconda3\Lib\site-packages\pywinauto\controls\hwndwrapper.py:180, in HwndWrapper.__new__(cls, element)
    178 def __new__(cls, element):
    179     """Construct the control wrapper"""
--> 180     return super(HwndWrapper, cls)._create_wrapper(cls, element, HwndWrapper)

File ~\AppData\Local\miniconda3\Lib\site-packages\pywinauto\base_wrapper.py:129, in BaseWrapper._create_wrapper(cls_spec, element_info, myself)
    126 new_class = cls_spec.find_wrapper(element_info)
    127 obj = object.__new__(new_class)
--> 129 obj.__init__(element_info)
    131 return obj

File ~\AppData\Local\miniconda3\Lib\site-packages\pywinauto\controls\hwndwrapper.py:1496, in DialogWrapper.__init__(self, hwnd)
   1489 def __init__(self, hwnd):
   1490     """Initialize the DialogWrapper
   1491 
   1492     The only extra functionality here is to modify self.friendlyclassname
   1493     to make it "Dialog" if the class is "#32770" otherwise to leave it
   1494     the same as the window class.
   1495     """
-> 1496     HwndWrapper.__init__(self, hwnd)
   1498     if self.class_name() == "#32770":
   1499         self.friendlyclassname = "Dialog"

File ~\AppData\Local\miniconda3\Lib\site-packages\pywinauto\controls\hwndwrapper.py:201, in HwndWrapper.__init__(self, element_info)
    199 # verify that we have been passed in a valid windows handle
    200 if not handleprops.iswindow(self.handle):
--> 201     raise InvalidWindowHandle(self.handle)
    203 # make it so that ctypes conversion happens correctly
    204 self._as_parameter_ = self.handle

InvalidWindowHandle: Handle 10028964 is not a vaild window handle
